name: Django application

on:
  push:
    paths:
      - app/**

env:
  CONTAINER_IMAGE_NAME: app:${{ github.sha }}
  DATABASE_INSTANCE_IDENTIFIER: DATABASE_INSTANCE_IDENTIFIER
  DATABASE_SNAPSHOT_IDENTIFIER: snapshot-${{ github.sha }}
  APP_DIRECTORY: app
  REPOSITORY_OWNER: PedroMendes96
  REPOSITORY_NAME: GithubActionProject

jobs:
  build:
    runs-on: ubuntu-latest

    # Context of the environment / job / steps / runner / strategy / matrix
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      # Full process
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Set up cache for the future builds
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # Data migration
      - name: Making migrations
        run: |
          python $APP_DIRECTORY/manage.py makemigrations --merge
      # - name: Make snapshot of DB
      #   run: |
      #     aws rds create-db-snapshot --db-snapshot-identifier $DATABASE_SNAPSHOT_IDENTIFIER --db-instance-identifier DATABASE_INSTANCE_IDENTIFIER
      - name: Make the migrations changes in the DB
        continue-on-error: true
        run: |
          python $APP_DIRECTORY/manage.py migrate
      # - name: Revert the changes
      #   if: failure()
      #   run: |
      #     aws rds restore-db-instance-from-db-snapshot --db-instance-identifier $DATABASE_SNAPSHOT_IDENTIFIER --db-snapshot-identifier DATABASE_INSTANCE_IDENTIFIER
      #     exit 1
      # Testing
      - name: Test django project
        run: |
          python $APP_DIRECTORY/manage.py test
      # Pre deploy checks
      - name: Deploy static files
        continue-on-error: true
        run: |
          python $APP_DIRECTORY/manage.py collectstatic --noinput
      - name: Compile translation messages
        continue-on-error: true
        run: |
          python $APP_DIRECTORY/manage.py compilemessages
      - name: Check if is ready to deploy
        run: |
          python $APP_DIRECTORY/manage.py check --deploy --fail-level ERROR
      # Deploy how to deploy via kubernetes... must have a way...
      - name: Login docker into github packages
        run: |
          docker login docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Build Image
        run: |
          docker build -t docker.pkg.github.com/${{ github.repository.full_name }}/$CONTAINER_IMAGE_NAME:$GITHUB_SHA .
      - name: Publish Image
        run: |
          docker push docker.pkg.github.com/${{ github.repository.full_name }}/$CONTAINER_IMAGE_NAME:$GITHUB_SHA
